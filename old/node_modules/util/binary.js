module.exports = {
    int16: function(offset, endian, buffer) {

        val = module.exports.uint16(offset, endian, buffer);

        neg = val & 0x8000;
        if (!neg) {
            return val;
        }

        return (0xffff - val + 1) * -1;
    },
    uint16: function(offset, endian, buffer) {
        var val = 0;

        if (endian == 'big') {
            val = buffer[offset] << 8;
            val |= buffer[offset + 1];
        } else {
            val = buffer[offset];
            val |= buffer[offset + 1] << 8;
        }

        return val;
    },

    int_array: function(data, endian) {
        if (!endian) {
            endian = 'big';
        }
        var l = data.length;
        var out = [];

        for (var offset = 0; offset < l; offset += 2) {
            var i = module.exports.int16(offset, endian, data);
            out.push(i);
        }
        return out;
    }

}