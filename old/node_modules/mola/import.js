var fs = require('fs');
var bin = require('util/binary');
var au = require('util/array');
var pm = require('path');

//__dirname + '/megt90n000cb.img'
module.exports = function(path, rows, cols, callback) {
    
    if (!pm.existsSync(path)){
        throw new Error(__filename + ': cannot find ' + path);  
    };
    
    console.log(__filename, ': reading ', path);
    var file_info = fs.statSync(path);
    console.log(file_info);
    
    var read_config = {
        bufferSize: 64 * 1024
    };

    var ints = [];
    var int_rows = [];
    
    var handle = fs.createReadStream(path, read_config);
    var read_size = 0;
    var last_percent = 0;
    var data_count = 0;
    var expected = rows * cols;
    
    handle.on('data', function(data) {
        ++data_count;
        var new_data = bin.int_array(data);
        ints = ints.concat(new_data);
        while (ints.length >= cols){
            int_rows.push(ints.slice(0, cols));
            ints = ints.slice(cols);
            
           // console.log('rows read: ', int_rows.length);
            
        }
        read_size += new_data.length;
        var percent = read_size * 100 / expected;
        if ((percent - last_percent) > 5) {
            console.log(parseInt(percent), '% read ', read_size, ' of ', expected, ' ints');
            last_percent = percent;
        }
    });

    handle.on('end', function() {
        if (ints.length){
            int_rows.push(ints);
        }
        console.log(__filename, ': flattening ', int_rows.length, 'int sets; ', data_count, ' on_datas');
        callback(null, int_rows);
    })

}
