var Walk = require('./walk');

var Grid = require('walker/grid/index');

var Gate = require('util/gate');

function Random_Walker(i, j, h, v, model, callback) {

    this.grid = new Grid(h, v);
    this.grid.init();

    this.i = i;
    this.j = j;

    this.walks = [];
    
    this.model = model;
    
    this.gate = new Gate(callback);
}

Random_Walker.prototype = {

    walk: function(steps) {
        console.log(__filename, ': Random_Walker.walk(', steps, ')');
        var walk = new Walk(this);
        walk.start(this.i, this.j);
        
        if (walk.overlap()) {
            console.log(__filename, 'DAMMIT new walk overlaps! ', walk.__toString());
        } else {

            this.go(walk, steps);
            this.gate.start();
        }
    },

    go: function(walk, steps) {
        if (!walk) {
           console.log(' <<<<<<< end of steps - no walk!');
        } else if (walk.overlap(1)) {
           console.log(' <<< end with overlap, ', walk.__toString());
        } else {

           console.log('RW: ', this.walks.length, ': walking, length ', walk.steps.length);

            if (walk.steps.length <= steps) {

                this.save_walk(walk);

                if (walk.steps.length < steps) {
                    this.go(walk.n(), steps);
                    this.go(walk.e(), steps);
                    this.go(walk.w(), steps);
                    this.go(walk.s(), steps);
                }
            }
        }
    },

    save_walk: function(w) {
        this.walks.push(w);
        this.gate.task_start();
        var self = this;
        w.put(this.model, function(){ self.gate.task_done();})
    }
}


module.exports = Random_Walker;