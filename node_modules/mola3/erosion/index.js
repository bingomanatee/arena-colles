var util = require('util');
var _ = require('underscore');
var Terrain = require('Terrain.js');

function _rain(cell) {
    cell.water += this._rain_amount(cell);
}

function _flux(cell, neighbor, dir) {
    var drop = cell.water_height() - neighbor.water_height();
    var flow;
    if (drop < 0) {
        flow = 0;
    } else {
        var area = cell.water * cell.terrain.length;
        flow = area * drop * cell.terrain.erosion.flow_rate();
    }

    cell.flux[dir] = flow;
    cell.total_flux += flow;
}

function _calculate_flux(cell) {

    cell.total_flux = 0;
    cell.each_neighbor(_flux);

    if (cell.total_flux > cell.water) {
        var k = cell.water / cell.total_flux;

        for (var dir in cell.flux) {
            cell.flux[dir] *= k;
        }
    }

}

function Erosion(terrain, config) {
    _.extend(this, config);
    this.terrain = terrain;
    this.terrain.erosion = this;
}

Erosion.prototype = {
    terrain:null,

    sim_time:60 * 60 * 24 * 7, // one week

    flow_friction:0.125,

    gravity:3.711, // m/s^2 on mars

    saturation_k:0.5,

    evaporation_k:0.95,

    _rain_amount:function (cell) {
        var r = Math.random() + Math.random();

        return r * 3 - 2;
    },

    rainfall:function () {
        this.terrain.each_cell(_rain);
    },

    _flow_rate:null,

    flow_rate:function () {
        if (this._flow_rate === null) {
            this._flow_rate = this.gravity * this.sim_time * this.flow_friction
                / (this.terrain.length);
        }
        return this._flow_rate;
    },

    flux:function () {

        var self = this;

        this.terrain.each_cell(_calculate_flux);
    }

}

module.exports = {
    Erosion:Erosion,
    Terrain:Terrain
};