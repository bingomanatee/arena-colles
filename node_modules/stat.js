module.exports = function(numbers) {
    this.numArr = numbers;
}

module.exports.prototype = {
    getNumWithSetDec: function(num, numOfDec) {
        var pow10s = Math.pow(10, numOfDec || 0);
        return (numOfDec) ? Math.round(pow10s * num) / pow10s : num;
    },
    getAverageFromNumArr: function(numArr, numOfDec) {
        if (!_.isArray(numArr)) {
            return false;
        }
        var i = this.numArr.length,
            sum = 0;
        while (i--) {
            sum += numArr[i];
        }
        return this.getNumWithSetDec((sum / numArr.length), numOfDec);
    },
    getVariance: function(numArr, numOfDec) {
        if (!_.isArray(numArr)) {
            return false;
        }
        var avg = this.getAverageFromNumArr(numArr, numOfDec),
            i = numArr.length,
            v = 0;

        while (i--) {
            v += Math.pow((numArr[i] - avg), 2);
        }
        v /= numArr.length;
        return this.getNumWithSetDec(v, numOfDec);
    },
    getStandardDeviation: function(numArr, numOfDec) {
        if (!isArray(numArr)) {
            return false;
        }
        var stdDev = Math.sqrt(getVariance(numArr, numOfDec));
        return this.getNumWithSetDec(stdDev, numOfDec);
    }
}