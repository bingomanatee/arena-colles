module.exports = function(numbers) {
    this.numArr = numbers;
}

module.exports.prototype = {
    _dec: function(num, numOfDec) {
        var pow10s = Math.pow(10, numOfDec || 0);
        return (numOfDec) ? Math.round(pow10s * num) / pow10s : num;
    },
    
    avg: function(numOfDec) {
        if (!_.isArray(this.numArr)) {
            return false;
        }
        var i = this.numArr.length,
            sum = 0;
        while (i--) {
            sum += numArr[i];
        }
        
        var avg = (sum / this.numArr.length);
        return arguments.length ? this._dec(avg, numOfDec) : avg;
    },
    
    variance: function( numOfDec) {
        if (!_.isArray(this.numArr)) {
            return false;
        }
        var avg = this.avg(numOfDec),
            i = numArr.length,
            v = 0;

        while (i--) {
            v += Math.pow((numArr[i] - avg), 2);
        }
        
        v /= numArr.length;
        return arguments.length ? this._dec(v, numOfDec) : v;
    },
    
    std_dev: function(numOfDec) {
        if (!isArray(this.numArr)) {
            return false;
        }
        
        var stdDev = Math.sqrt(this.variance(numOfDec));
        return arguments.length ? this._dec(stdDev, numOfDec) : stdDev;
    }
}