var fs = require('fs');
var bin = require('util/binary');
var au = require('util/array');
var pm = require('path');
var neobuffer = require('neobuffer');
var _ = require('underscore');

/**
 * note - mars data is stored in 16 bit Ints; Mongo stores in 32 bit ints. 
 * @param path
 * @param cols
 * @param callback
 */

module.exports = function(path, cols, callback) {

    var read_config = {
        bufferSize: 64 * 1024
    };

    var ints = [];
    var int_rows = [];

    var handle = fs.createReadStream(path, read_config);

    handle.on('data', function(data_buffer) {
        var nbuffer = neobuffer.Buffer(data_buffer.length);
        data_buffer.copy(nbuffer);

        for (var s = 0; s < nbuffer.length; s += 2) {
            ints.push(parseInt(nbuffer.readInt16(s, 'big')));
        }

        while (ints.length >= cols) {
            var slice = ints.slice(0, cols);
            int_rows.push(slice);
            ints = ints.slice(cols);
        }
    });

    handle.on('end', function() {
        if (ints.length) {
            int_rows.push(ints);
        }
        callback(null, int_rows);

    });
    
}