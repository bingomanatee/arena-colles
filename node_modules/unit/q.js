var _ = require('underscore');
var util = require('util');

module.exports = function (path, config, split) {
    if (split) util.log('start of q: ' + path);

    if (split && (! _.isArray(path))) {
        path = path.split('/');
    }

    path.forEach(function(field) {
        if (!config){
            return;
        }
        if (_.isArray(config)) {
            console.log('parsing array indexed config ', field, config);
            var field_n = parseInt(field);
            if (_.isNaN(field_n)) {
                throw new Error(__filename, 'attempt to pull a non-numeric key, '
                    + field + ' from ' + util.inspect(config));
            }
            config = config[field];

        } else {
            if (!config.hasOwnProperty(field)) {
                throw new Error('no ' + field + ' in ' +
                    util.inspect(config).slice(0, 20));
            }
            config = config[field];
        }

    });
    return config;

}

function _i(filter) {
    var filter_num = parseInt(filter);
    if (_.isNaN(filter_num)) {
        throw new Error(__filename + ': cannot make an array index from ' + filter);
    } else {
        return filter_num;
    }
}