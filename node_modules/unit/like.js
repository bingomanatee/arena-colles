var assert = require('assert');
var _ = require('underscore');

/**
 * This module compares two items.
 * Unlike assert deep compare, we don't care about
 * the order of parameters in objects.
 * we DO care about the order of array elements.
 */

/**
 * compares two arrays using _like on each value of each arrray
 * Presumes that both objects are arrays
 *
 * @param a
 * @param b
 */

function _like_array(a, b) {
    // console.log('_like_array: comparing', a, 'to', b);

    if (a.length != b.length) {
        // console.log('array lengths are different: ', a, b);
        return false;
    }
    var like = true;

    a.forEach(function(value, index) {
        if (like) {
            // console.log('comparing ', value, 'to', b[index]);
            like = _like(value, b[index]);
            if (!like) {
                // console.log('different values for', index, ': ', value, b[index]);
            }
        } else {
           // console.log('already sad');
        }
    });

    if (like) {
        // console.log('smilin buddha array!');
    } else {
        // console.log('sad buddha array!');
    }
    return like;
}

/**
 * compares two objects ensuring they have the same properties
 * and that their properties pass the _like tests.
 *
 * presumes that both objects are objects
 *
 * @param a
 * @param b
 */

function _like_object(a, b) {
    var a_keys = _.keys(a);
    var b_keys = _.keys(b);

    if (a_keys.length != b_keys.length) {
        // console.log('different count of keys', a_keys, b_keys);
        return false;
    }

    // at this point we know that both objects have the same number of properties

    a_keys = _.sortBy(a_keys, function(v) {
        return v;
    });
    b_keys = _.sortBy(b_keys, function(v) {
        return v;
    });

    if (!( a_keys.join('') == b_keys.join('') )) {
        // console.log(a_keys.join(''), '!=', b_keys.join(''));
        return false;
    }

    // at this point we know that the two objecsts have the same properties - we don't care about order

    var like = true;

    a_keys.forEach(function(key) {
        if (like) {

            like = _like(a[key], b[key]);
            if (!like) {
                // console.log('different values for', key, ': ', a[key], b[key]);
            }
        }
    });

    // console.log('smilin jesus!', a, b);
    return like;
}

function _like(a, b) {
    if (_.isUndefined(a)) {
        if (!_.isUndefined(b)) {
            return false;
        }
    } else if (_.isNull(a)) {
        if (!_.isNull(b)) {
            return
            false
        }
    } else if (_.isArray(a)) {
        if (!_.isArray(b)) {
            // console.log('comparing array ', a, 'to non-array', b);
            return false;
        } else if (!_like_array(a, b)) {
            return false
        }
    } else if (_.isNumber(a)) {
        if ((!_.isNumber(b)) || (a != b)) {
            return false;
        }
    } else if (_.isString(a)) {
        if ((!_.isString(b)) || (a != b)) {
            return false;
        }
    } else if (_.isDate(a)) {
        if ((!_.isDate(b)) || (a.getTime() != b.getTime())) {
            return false;
        }
    } else if (_.isObject(a)) {
        if ((!_.isObject(b)) || (!_like_object(a, b))) {
            return false;
        }
    } else {
        // console.log('cannot identify', a);
        throw new Error('Cannot identify ' + require('util').inspect(a));
    }

    return true;
}

module.exports = _like;
