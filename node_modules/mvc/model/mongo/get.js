module.exports = function(id, callback, fields) {
    if (!(typeof(callback) == 'function')) {
        throw new Error(__filename + ':: get no callback for ' + this.collection);
    }
    if (!this.hasOwnProperty('_as_oid')) {
        throw new Error('no _as_oid');
    }

    function _on_data(e, r) {
        console.log(__filename, '_on_data ***************', e, r, ' from ', id);
        callback(e, r);
    };

    console.log(__filename, ': from ', this.config.coll);
    
    var c2 = this.config.coll.find({_id: this._as_oid(id)}, null);
     c2.toArray(function(err, data){
        console.log(__filename, ': array - ', data);
     });
    c2.next(_on_data);
    
    /** .next(function(err, next){
        console.log(__filename, ': result - ', err, next);
        callback(err, next);
    })
    */;

    console.log('c2:', c2);
}