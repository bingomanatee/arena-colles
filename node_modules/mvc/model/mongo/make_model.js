var db = require(MVC_MODELS + '/db');

module.exports = function(coll_name, config, mixins, callback) {
    var self = this;

    if (!config) {
        config = {};
    }

  //  console.log(__filename, '::make_model: mixins for ', coll_name, ', mixins: ', mixins, '; callback: ', callback);
    /**
     * Load the database from the default if there is no database
     * passed through the config.
     * 
     */
    if (config.db) {
        this._make_model(coll_name, config, mixins, callback);
    } else if (self._db) {
        config.db = self._db;
        _make_model(coll_name, config, mixins, callback);
    } else {
        //  console.log(__filename, ': opening default database for ', coll_name);
        return db.open(function(err, db) {
            if (err) {
                // console.log(__filename, ': ERROR OPENING DATABSE: ', err);
                return callback(err);
            }
            self._db = config.db = db; // recurse once with new DB. 
            //  console.log(__filename, ': getting collection for ', coll_name);
            _make_model(coll_name, config, mixins, callback);
        });
    }

    // console.log(__filename, ': getting collection for ', coll_name);
}

function _make_model(coll_name, config, mixins, callback) {
  //  console.log(__filename, ': _make_model: making ', coll_name, ': mixins ', mixins);
    if (typeof(mixins) == 'function') {
        callback = mixins;
        mixins = {};
    }

    if (!(typeof(callback) == 'function')) {
        throw new Exception(__filename + ': no callback for ' + coll_name);
    }

    var mongo_model = require('mvc/model/mongo');
/*  config.db.collection(coll_name, function(err, coll) { native
  
        if (err) {
            // console.log(__filename, ':: make_model: error making collection ' + coll_name, err);
            callback(err);
        } else { */
    config.coll = config.db.collection(coll_name);
    var name = config.db.databaseName + '.' + coll_name;
    var mongo_model = new Model(name, null, config, mongo_model.mixins);
    if (mixins) {
        _.extend(mongo_model, mixins);
    }
    mongo_model.collection = coll_name;
 //   console.log(__filename, ':: returning model', coll_name);
    callback(null, mongo_model);
}