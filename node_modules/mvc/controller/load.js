var path_module = require('path');
var inflect = require('inflect');
var path = require('path');
var context_module = require('./context');
var _bind_view = require('./bind_view');
var _bind_model = require('./bind_model');

module.exports = function(cont_name, app) {
    context_module(function(err, Context) {

        var controller_path = MVC_CONTROLLERS + '/' + cont_name;
        console.log(__filename, ':: ************************ loading controller ', cont_name, ': ', controller_path);
        var cont_module = require(controller_path);
        if (!cont_module) {
            throw new Error('cannot find controller for ' + cont_name)
        }
        cont_module.name = cont_name; // adding a refletion property

        _bind_model(cont_module);

        var cont_name_plural = inflect(cont_name);
        var prefix;

        // Special case for "app"
        if (cont_name == 'app') {
            prefix = '/';
        } else {
            prefix = '/' + cont_name_plural + '/';
        }

        Object.keys(cont_module).map(function(action_name) {
            //  console.log('mapping action_name ' + action_name);
            switch (action_name) {
            case 'index':
                var bind = true;
                var method = 'GET';
                if (cont_name == 'app') {
                    var action_path = '/';
                } else {
                    var action_path = '/' + cont_name_plural + '.:format?';
                }
                break;

            case 'show':
                var bind = true;
                var method = 'GET';
                var action_path = prefix + ':id.:format?';
                break;

            case 'add':
                var bind = true;
                var method = 'GET';
                var action_path = prefix + ':id/add';
                break;

            case 'create':
                var bind = true;
                var action_path = prefix + ':id.:format?';
                method = 'POST';
                break;

            case 'edit':
                var bind = true;
                var method = 'GET';
                var action_path = prefix + ':id/edit';
                break;

            case 'update':
                var bind = true;
                var action_path = prefix + ':id.:format?';
                method = 'PUT'
                // create a backup 
                var context = new Context({
                    controller: cont_module,
                    handler: cont_module[action_name],
                    action: action_name
                });
                app.post(prefix + ':id/update.:format?', context.launcher());
                break;

            case 'refresh':
                var bind = true;
                var action_path = prefix + ':id/refresh';
                var method = 'GET';
                break;

            case 'delete':
                var bind = true;
                var action_path = prefix + ':id/delete';
                var method = 'GET';
                break;

            case 'destroy':
                var bind = true;
                var action_path = prefix + ':id';
                method = 'DELETE';
                break;

            case 'route':
                bind = false;
                console.log(__filename, ': adding routes for ', cont_module.name);
                cont_module.route(app);
                break;

            default:
                // console.log('NON mvc controller method: ' + action_name);
                bind = false;
            }
            if (bind) {
                _bind_view(cont_module, action_name);
                Context.register_action(cont_module.name, action_name);

                var context = new Context({
                    controller: cont_module,
                    handler: cont_module[action_name],
                    action: action_name
                });
                console.log(__filename, ': METHOD: ', method, ', PATH: ', action_path);

                switch (method) {
                case 'GET':
                    app.get(action_path, context.launcher());
                    break;

                case 'PUT':
                    app.put(action_path, context.launcher());
                    break;

                case 'POST':
                    app.post(action_path, context.launcher());
                    break;

                case 'DELETE':
                    app.delete(action_path, context.launcher());
                    break;
                }
            }
        });

    })
}