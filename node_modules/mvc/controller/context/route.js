
var bind_view = require('mvc/controller/bind_view');
var bind_model = require('mvc/controller/bind_model');

module.exports = function(Context, gate) {

    Context.prototype.action_clone = function(action, params) {
        if (!params) {
            params = {};
        }
        params.controller = this.controller;
        params.action = action;

        if (!this.hasOwnProperty('controller') || !this.controller) {
            console.log(__filename, ': $$$$$$$$ error - no controller', this);
            throw new Error('no controller in context');
        }

        if (!params.handler) {
            params.handler = this.controller[action];
        }

        var context = new Context(params);
        return context;
    }

    Context.prototype._route = function(mode, app, path, action, params) {
        if (typeof(params) == 'string') {
            params = {
                view: params
            };
        }
        var context = this.action_clone(action, params);
        Context.register_action(this.controller.name, action);

        app[mode](path, context.launcher());
    }

    Context.prototype.get = function(app, path, action, params) {
        this._route('get', app, path, action, params);
    }

    Context.prototype.post = function(app, path, action, params) {
        this._route('post', app, path, action, params);
    }

    Context.prototype.put = function(app, path, action, params) {
        this._route('put', app, path, action, params);
    }

    Context.prototype.delete = function(app, path, action, params) {
        this._route('delete', app, path, action, params);
    }

    Context.prototype.all = function(app, path, action, params) {
        this._route('all', app, path, action, params);
    }

    gate.task_done();
}