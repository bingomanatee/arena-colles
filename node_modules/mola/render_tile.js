module.exports = function(ctx, r, c) {
    var self = this;
    var img_data = [];
    var r_end = Math.min(this.get_rows(), r + this.image_tile_rows);
    var c_end = Math.min(this.get_cols(), c + this.image_tile_cols);
     r = parseInt(r);
     c = parseInt(c);
    
    if ((!(r % 100)) && (!(c % 100))){
        console.log('rendering tile row ', r, ' ... ', r_end, ', col ', c, ' ... ', c_end);
    }

    for (var r_sub = r; r_sub < r_end; ++r_sub) {
        img_data = img_data.concat(this.data[r_sub].slice(c, c_end));
    }

    var h = r_end - r;
    var w = c_end - c;
    var epc = w * h;

    if ((w <= 0) || (h <= 0)) {
        throw new Error("bad range: w = " + w + ', h = ' + h);
    }

    console.log('creating image data: ', w, ' x ', h);
    var id = ctx.createImageData(w, h);

    if (img_data.length != epc) {
        console.log('too much image data; expected ', epc, ', retrieved ', img_data.length);
        img_data = img_data.slice(0, epc);
    }

    var base = 0;
    img_data.forEach(function(height) {
        var rgb = self.height_color(height);

        id.data[base] = rgb[0];
        id.data[base + 1] = rgb[1];
        id.data[base + 2] = rgb[2];
        id.data[base + 3] = 255;

        base += 4;
        // oninc(base, 1000000, _c);
    });

   // console.log('putting image data');
    ctx.putImageData(id, c, r);

}