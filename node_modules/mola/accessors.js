var MOLA = require('mola');

module.exports = {

    get_rows: function() {
        return (this.end_row) ? (this.end_row - this.start_row) : this.rows;
    },

    get_cols: function() {
        return this.cols;
    },

    get_point_count: function() {
        return this.get_rows() * this.get_cols();
    },

    get_pixels_per_row: function() {
        return (this.pixels_per_row) ? this.pixels_per_row : (this.row_tiles) ? Math.ceil(this.get_rows() / this.row_tiles) : this.get_rows();
    },

    get_pixels_per_col: function() {
        return (this.pixels_per_col) ? this.pixels_per_col : (this.col_tiles) ? Math.ceil(this.get_cols() / this.col_tiles) : this.get_cols();
    },

    /**
     * note - may be a fload if pixels per row doesn't go into rows perfectly
     */

    get_tile_rows: function() {
        return (this.pixels_per_row) ? this.get_rows() / (this.pixels_per_row) : (this.row_tiles) ? this.row_tiles : 1;
    },

    get_tile_cols: function() {
        return (this.pixels_per_col) ? this.get_cols() / this.pixels_per_col : (this.col_tiles) ? this.col_tiles : 1;
    },

    load: function() {
        console.log(__filename, '::accessors() loading');

        if (!(MOLA.extensions.hasOwnProperty('accessors') && MOLA.extensions.accessors)) {
            for (var prop in module.exports) {
                if (prop != 'load') {
                    MOLA.prototype[prop] = module.exports[prop];
                }

            }

            MOLA.extensions.chopper = true;
            console.log(__filename, ':: LOADED');
        }

    }

}