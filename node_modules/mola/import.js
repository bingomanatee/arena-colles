var fs = require('fs');
var bin = require('util/binary');
var au = require('util/array');

//__dirname + '/megt90n000cb.img'
module.exports = function(config, callback) {
    var path = config.path;

    var expected = path.rows * path.cols; // bytes expected
    console.log(__filename, ': reading ', path);
    var file_info = fs.statSync(path);
    console.log(file_info);
    

    var read_config = {
        bufferSize: 64 * 1024
    };

  /*  if (config.hasOwnProperty('start_row')) {
        read_config.start = config.start_row * config.cols * 2;
        read_config.end = config.end_row * config.cols * 2;
        expected = (read_config.end - read_config.start) * path.cols;
    } */

    var ints = [];
    var int_rows = [];
    var cols = config.get_cols();
    console.log('clipping col count to ', cols);
    
    var handle = fs.createReadStream(path, read_config);
    var read_size = 0;
    var last_percent = 0;
    var data_count = 0;

    handle.on('data', function(data) {
        ++data_count;
        var new_data = bin.int_array(data);
        ints = ints.concat(new_data);
        while (ints.length >= cols){
            int_rows.push(ints.slice(0, cols));
            ints = ints.slice(cols);
            
           // console.log('rows read: ', int_rows.length);
            
        }
        read_size += new_data.length;
        var percent = read_size * 100 / expected;
        if ((percent - last_percent) > 5) {
            console.log(parseInt(percent), '% read ', read_size, ' of ', expected, ' ints');
            last_percent = percent;
        }
    });

    handle.on('end', function() {
        console.log('flattening ', ints.length, 'int sets; ', data_count, ' batches');
        if (ints.length){
            int_rows.push(ints);
        }
        console.log('done reading ', path);
        callback(null, int_rows);
    })

}
