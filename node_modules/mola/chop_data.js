var mm = requre(MVC_MODELS);

module.exports = {

    chop_data: function(callback) {
        var tile_rows = Math.ceil(this.get_rows() / this.get_pixels_per_col());
        var tile_cols = Math.ceil(this.get_cols() / this.get_pixels_per_col());
        console.log('tiles: ', tile_rows, ' x ', tile_cols, ': ', tile_rows * tile_cols, ' total');
        var self = this;

        mm.model('map_sectors', function(err, mt_model) {
            mt_model.delete({
                data_file: self.data_file
            }, function(err, result) {

                for (var i = 0; i < tile_rows; ++i) for (var j = 0; j < tile_cols; ++j) {
                    var data = self.tile_data(i, j);

                    var out = {
                        map: self.map_id,
                        root: self.root,
                        north: self._lat(j),
                        south: self._lat(j + 1),
                        east: self._long(i),
                        west: self._long(i + 1),
                        heights: data
                    }

                } // end for
            }); // end delete
        });
    },

    load: function() {
        var MOLA = require('./index');
        if (!(MOLA.extensions.hasOwnProperty('tile_lat_long') && MOLA.extensions.chop_data)){
            require('./tile_lat_long').load();
        }
        
        if (!(MOLA.extensions.hasOwnProperty('chop_data') && MOLA.extensions.chop_data)){
                        for (var prop in module.exports){
                if (prop != 'load'){
                    MOLA.prototype[prop] = module.exports[prop];
                }
                
            }
            
            MOLA.extensions.chop_data = true;
            
            console.log(__filenae, ' LOADED');
        }
    }

}