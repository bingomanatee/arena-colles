module.exports = function(v, k, config) {
/*
    if (!config.cache) {
        config.cache = [];
    }

    var rgb = false;
    var rgb_cache_index = -1;

    var ccl = config.cache.length;
    for (var i = 0; i < ccl; ++i) {
        var item = config.cache[i];
        if (item && (item.height == v)) {
            ++item.count;
            delete config.cache[i];
            config.cache.unshift(item);
            return item.rgba;
        }
    }
*/
    var mode = (config.hasOwnProperty('mode')) ? config.mode : 'color';

    switch (mode) {
    case 'height':
        var min = (config.hasOwnProperty('min')) ? config.offset : 0;
        var scale = (config.hasOwnProperty('scale')) ? config.scale : 1;

        var h = v;
        h += min;
        h *= scale;
        h = parseInt(h);

        h = Math.min(255, Math.max(0, h));
        var rgba = [h, h, h];
        break

    case 'color':
        var rgba = this.height_color(v);
        break

    default:
        var rgba = this.height_color(v);
    }

    rgba[3] = 255;
/*
    var cache_item = {
        height: v,
        rgba: rgba,
        count: 1
    };
    config.cache.unshift(cache_item);
    if (config.cache.length > 20) {
        config.cache.pop();
    } */

    return rgba;
}

function _reduce(cache) {
    var li = -1;
    cache.forEach(function(item, i) {
        if (li == -1) {
            li == i;
        } else if (item.count < cache[li].count) {
            li = i;
        }
    });

    delete cache[li];

}